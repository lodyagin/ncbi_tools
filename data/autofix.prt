Macro-action-list ::= {
  edit-location {
    type cds ,
    action
      extend-3 NULL ,
    retranslate-cds FALSE ,
    also-edit-gene FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 either ,
        partial3 partial ,
        location-type any ,
        end3
          max-dist-from-end 2 } ,
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } } } ,
  edit-location {
    type cds ,
    action
      extend-5 NULL ,
    retranslate-cds FALSE ,
    also-edit-gene FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 partial ,
        partial3 either ,
        location-type any ,
        end5
          max-dist-from-end 2 } ,
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } } } ,
  edit-location {
    type cds ,
    action
      extend-3 NULL ,
    retranslate-cds FALSE ,
    also-edit-gene FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 either ,
        partial3 partial ,
        location-type any ,
        end3
          max-dist-from-end 2 } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  edit-location {
    type cds ,
    action
      extend-5 NULL ,
    retranslate-cds FALSE ,
    also-edit-gene FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 partial ,
        partial3 either ,
        location-type any ,
        end5
          max-dist-from-end 2 } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          molinfo-field
            completedness complete } ,
    also-change-mrna FALSE ,
    constraint {
      molinfo {
        field
          molecule mRNA ,
        is-not FALSE } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Viruses" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      molinfo {
        field
          completedness complete ,
        is-not FALSE } } } ,
  aecr {
    action
      remove {
        field
          molinfo-field
            topology circular } ,
    also-change-mrna FALSE ,
    constraint {
      molinfo {
        field
          molecule mRNA ,
        is-not FALSE } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Viruses" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      molinfo {
        field
          topology circular ,
        is-not FALSE } } } ,
  aecr {
    action
      remove {
        field
          molinfo-field
            technique both } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          protein NULL ,
        feature any ,
        strandedness any } ,
      molinfo {
        field
          technique both ,
        is-not FALSE } } } ,
  synchronize-cds-partials NULL ,
  adjust-for-consensus-splice NULL ,
  trim-stop-from-complete-cds NULL ,
  aecr {
    action
      remove {
        field
          feature-field {
            type cds ,
            field
              legal-qual db-xref } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual db-xref } ,
        string-constraint {
          match-text "taxon" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "taxon" ,
              synonyms {
                "?" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual db-xref } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual db-xref } ,
        string-constraint {
          match-text "taxon" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "taxon" ,
              synonyms {
                "?" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual db-xref } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual db-xref } ,
        string-constraint {
          match-text "taxon" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "taxon" ,
              synonyms {
                "?" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type gene ,
            field
              legal-qual db-xref } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual db-xref } ,
        string-constraint {
          match-text "taxon" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "taxon" ,
              synonyms {
                "?" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type otherRNA ,
            field
              legal-qual db-xref } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type otherRNA ,
            field
              legal-qual db-xref } ,
        string-constraint {
          match-text "taxon" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "taxon" ,
              synonyms {
                "?" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual db-xref } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual db-xref } ,
        string-constraint {
          match-text "taxon" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "taxon" ,
              synonyms {
                "?" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  trim-junk-from-primer-seq NULL ,
  remove-seg-gaps NULL ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual taxname ,
        value "Human immunodeficiency virus 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Human immunodeficiency virus-1" ,
              synonyms {
                "Human Immunodeficiency Virus-1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "f.sp." ,
          repl-txt "f. sp." ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " SP. " ,
          repl-txt " sp. " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "HIV" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location proviral ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Retroviridae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      molinfo {
        field
          molecule genomic ,
        is-not FALSE } ,
      molinfo {
        field
          mol-class dna ,
        is-not FALSE } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolation-source ,
        constraint {
          match-text "Homo sapiens" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Homo sapiens" ,
              synonyms {
                "human" ,
                "Homo sapien" ,
                "Homosapiens" ,
                "Homo spiens" ,
                "Homo Sapience" ,
                "homosapein" ,
                "homosapien" ,
                "homo_sapien" ,
                "homo_sapiens" ,
                "Homosipian" ,
                "Human Being" ,
                "Human Beings" ,
                "humans" ,
                "Homo sappiens" ,
                "human sapiens" ,
                "human biengs" ,
                "human bieng" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sapiens" ,
              synonyms {
                "sapeins" ,
                "sapein" ,
                "sapens" ,
                "sapins" ,
                "sapin" ,
                "sapen" ,
                "spaeins" ,
                "sapians" ,
                "sapian" ,
                "sapies" ,
                "sapie" ,
                "sapien" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Homo sapiens" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual isolation-source } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolation-source ,
        constraint {
          match-text "Homo sapiens" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Homo sapiens" ,
              synonyms {
                "human" ,
                "Homo sapien" ,
                "Homosapiens" ,
                "Homo-sapiens" ,
                "Homo spiens" ,
                "Homo Sapience" ,
                "homosapein" ,
                "homosapien" ,
                "homo_sapien" ,
                "homo_sapiens" ,
                "Homosipian" ,
                "Human Being" ,
                "Human Beings" ,
                "humans" ,
                "Homo sappiens" ,
                "human sapiens" ,
                "human biengs" ,
                "human bieng" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sapiens" ,
              synonyms {
                "sapeins" ,
                "sapein" ,
                "sapens" ,
                "sapins" ,
                "sapin" ,
                "sapen" ,
                "spaeins" ,
                "sapians" ,
                "sapian" ,
                "sapies" ,
                "sapie" ,
                "sapien" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual nat-host ,
        constraint {
          match-text "Homo sapiens" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field journal ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field issue ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field pages ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field serial-number ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field cit ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-email ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-fax ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-phone ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field journal ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field issue ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field pages ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field serial-number ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field cit ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-email ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-fax ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-phone ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-lower NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-phone ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-lower NULL } } } } ,
  fix-pub-caps {
    title TRUE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title TRUE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-lower NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors TRUE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors TRUE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-lower NULL } } } } ,
  fix-caps
    author {
      last-name-only FALSE } ,
  fix-caps
    author {
      last-name-only TRUE } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country TRUE ,
    punct-only FALSE } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only TRUE } ,
  aecr {
    action
      remove {
        field
          pub affil-sub } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-sub } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-sub ,
          constraint {
            match-text "Select A State" ,
            match-location contains ,
            case-sensitive FALSE ,
            ignore-space TRUE ,
            ignore-punct TRUE ,
            ignore-words {
              {
                word "Select A State" ,
                synonyms {
                  "none" ,
                  "N/A" ,
                  "Not Applicable" ,
                  "NotApplicable" ,
                  "Select State/Province" ,
                  "--- Select One ---" ,
                  "N/A = Not Applicable" ,
                  "not USA" ,
                  "not USA/Canada" ,
                  "outside of USA" ,
                  "Select if applicable" ,
                  "(Outside USA)" ,
                  "outside USA" ,
                  "outside US" ,
                  "outside the US" ,
                  "Neither U.S. nor Canada" ,
                  "Choose a state" ,
                  "---Select A Canadian Province---" ,
                  "Non-US/Non-Canadian" ,
                  "Please select region, state or province" ,
                  "Select one" ,
                  "Please select..." ,
                  "Select State/Province" ,
                  "-- Please Select --" ,
                  "Outside US/Canada/Australia" ,
                  "Select State" ,
                  "Please choose from the following:" ,
                  "Non-US/Canada" ,
                  "OTHER" ,
                  "Please choose from the following :" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE ,
            is-first-cap FALSE ,
            is-first-each-cap FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-zipcode } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-zipcode } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-zipcode ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space TRUE ,
            ignore-punct TRUE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" ,
                  "N.A." ,
                  "Not Applicable" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE ,
            is-first-cap FALSE ,
            is-first-each-cap FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affiliation } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affiliation } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affiliation ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" ,
                  "Not Applicable" ,
                  "NotApplicable" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE ,
            is-first-cap FALSE ,
            is-first-each-cap FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-div } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-div } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-div ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" ,
                  "Not Applicable" ,
                  "NotApplicable" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE ,
            is-first-cap FALSE ,
            is-first-each-cap FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-street } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-street } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-street ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space TRUE ,
            ignore-punct TRUE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" ,
                  "Not Applicable" ,
                  "NotApplicable" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE ,
            is-first-cap FALSE ,
            is-first-each-cap FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-city } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-city } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-city ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space TRUE ,
            ignore-punct TRUE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" ,
                  "Not Applicable" ,
                  "NotApplicable" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE ,
            is-first-cap FALSE ,
            is-first-each-cap FALSE } } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Korea, Republic of" ,
          repl-txt "Republic of Korea" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub affil-country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Moldova, Republic of" ,
          repl-txt "Republic of Moldova" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub affil-country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Tanzania, Republic of" ,
          repl-txt "Republic of Tanzania" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub affil-country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Sience" ,
          repl-txt "Science" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub affiliation } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Sience" ,
          repl-txt "Science" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub affil-div } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Sience" ,
          repl-txt "Science" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub affil-street } ,
    also-change-mrna FALSE } ,
  fix-pub-caps {
    title TRUE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-caps NULL } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp" ,
          repl-txt " sp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp." ,
          repl-txt " sp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp" ,
          repl-txt " spp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp." ,
          repl-txt " spp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "#" ,
          repl-txt " " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  remove-descriptor {
    type publication ,
    constraint {
      pub {
        type unpublished ,
        special-field {
          field title ,
          constraint
            is-all-punct NULL } } } } ,
  remove-descriptor {
    type publication ,
    constraint {
      pub {
        type unpublished ,
        field {
          field title ,
          constraint {
            match-text "none" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space TRUE ,
            ignore-punct TRUE ,
            ignore-words {
              {
                word "none" ,
                synonyms {
                  "N/A" ,
                  "to be determined" ,
                  "not submitted" ,
                  "nothing" ,
                  "unpublished" ,
                  "direct submission" ,
                  "direct submit" ,
                  "submit" ,
                  "in preparation" ,
                  "manuscript in preparation" ,
                  "N.A." ,
                  "null" ,
                  "directed submission" ,
                  "unpublished data" ,
                  "No" ,
                  "title" ,
                  "no title" ,
                  "GenBank" ,
                  "NCBI" ,
                  "in prep" ,
                  "in preparation for publication" ,
                  "NotApplicable" ,
                  "Not Applicable" ,
                  "under submission" ,
                  "under review" ,
                  "Direct Submission" ,
                  "Direct Submitted" ,
                  "dirct submission" ,
                  "yet to be published" ,
                  "not published" ,
                  "no titled" ,
                  "no title yet" ,
                  "Direct submision" ,
                  "submitted directly" ,
                  "submited direct" ,
                  "direct submited" ,
                  "unpublished manuscript" ,
                  "sequence submission" ,
                  "directed-submission" ,
                  "Unpublish" ,
                  "unpublication" ,
                  "untitled - to update" ,
                  "Unpublished sequence" ,
                  "Direct submission" ,
                  "Unpublished yet" ,
                  "Directly submit" ,
                  "Unpubilished" ,
                  "title for manuscript" ,
                  "no reference" ,
                  "direction submission" ,
                  "direction submittion" ,
                  "unpublication" ,
                  "Direct submisson" ,
                  "non" ,
                  "unknown" ,
                  "No title yet" ,
                  "No title given" ,
                  "unpulished" ,
                  "submit directly" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE ,
            is-first-cap FALSE ,
            is-first-each-cap FALSE } } } } } ,
  remove-descriptor {
    type publication ,
    constraint {
      pub {
        type unpublished ,
        special-field {
          field title ,
          constraint
            is-not-present NULL } } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual nat-host ,
        constraint {
          match-text "homo sapiens" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "homo sapiens" ,
              synonyms {
                "Homo sapien" ,
                "Homosapiens" ,
                "Homo-sapiens" ,
                "Homo spiens" ,
                "Homo Sapience" ,
                "homosapein" ,
                "homosapien" ,
                "homo_sapien" ,
                "homo_sapiens" ,
                "Homosipian" ,
                "Human Being" ,
                "Human Beings" ,
                "humans" ,
                "Homo sappiens" ,
                "human sapiens" ,
                "human biengs" ,
                "human bieng" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sapiens" ,
              synonyms {
                "sapeins" ,
                "sapein" ,
                "sapens" ,
                "sapins" ,
                "sapin" ,
                "sapen" ,
                "spaeins" ,
                "sapians" ,
                "sapian" ,
                "sapies" ,
                "sapie" ,
                "sapien" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual taxname ,
        value "Homo sapiens" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "homo sapiens" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "homo sapiens" ,
              synonyms {
                "human" ,
                "Homo sapien" ,
                "Homosapiens" ,
                "Homo-sapiens" ,
                "Homo spiens" ,
                "Homo Sapience" ,
                "homosapein" ,
                "homosapien" ,
                "homo_sapien" ,
                "homo_sapiens" ,
                "Homosipian" ,
                "Human Being" ,
                "Human Beings" ,
                "humans" ,
                "Homo sappiens" ,
                "human sapiens" ,
                "human biengs" ,
                "human bieng" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sapiens" ,
              synonyms {
                "sapein" ,
                "sapens" ,
                "sapins" ,
                "sapin" ,
                "sapen" ,
                "spaeins" ,
                "sapians" ,
                "sapian" ,
                "sapies" ,
                "sapie" ,
                "sapien" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location mitochondrion ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type d-loop ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "control region" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "control region" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      string {
        match-text "mitochondrion" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location mitochondrion ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "control region" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      string {
        match-text "mitochondrion" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location mitochondrion ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature d-loop ,
        num-features
          equals 1 ,
        strandedness any } ,
      string {
        match-text "mitochondrion" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "faeces" ,
          repl-txt "feces" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolation-source } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "faecal" ,
          repl-txt "fecal" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolation-source } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Faecal sample" ,
          repl-txt "fecal sample" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolation-source } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "`" ,
          repl-txt "'" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " :" ,
          repl-txt ": " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual country ,
        value "Virgin Islands" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "US Virgin Islands" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "US Virgin Islands" ,
              synonyms {
                "U.S. Virgin Islands" ,
                "United States Virgin Islands" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Bosnia-Herzegovina" ,
          repl-txt "Bosnia and Herzegovina" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "French Guyana" ,
          repl-txt "French Guiana" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Cote d' Ivoire" ,
          repl-txt "Cote d'Ivoire" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Coted'Ivoire" ,
          repl-txt "Cote d'Ivoire" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Cote d Ivoire" ,
          repl-txt "Cote d'Ivoire" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Guinea Bissau" ,
          repl-txt "Guinea-Bissau" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Guinea_Bissau" ,
          repl-txt "Guinea-Bissau" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GuineaBissau" ,
          repl-txt "Guinea-Bissau" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "P. R. China" ,
          repl-txt "China" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "P. R. China" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "PR China" ,
          repl-txt "China" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "PR China" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Scotland" ,
          repl-txt "United Kingdom: Scotland" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "Scotland" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Wales" ,
          repl-txt "United Kingdom: Wales" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "Wales" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Democratic People's Republic of Korea" ,
          repl-txt "North Korea" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "Democratic People's Republic of Korea" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Republic of Korea" ,
          repl-txt "South Korea" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "Republic of Korea" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Russian Federation" ,
          repl-txt "Russia" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "Russian Federation" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual country ,
        value "Democratic Republic of the Congo" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual country ,
        constraint {
          match-text "DR Congo" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "DR Congo" ,
              synonyms {
                "Congo" ,
                "D.R. Congo" ,
                "DRCongo" ,
                "D.R.Congo" ,
                "Democratic Republic of Congo" ,
                "Democratic Republic Congo" ,
                "Congo Democratic Republic" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  fix-caps
    src-country NULL ,
  fix-caps
    src-qual sex ,
  fix-caps
    src-qual nat-host ,
  fix-caps
    src-qual isolation-source ,
  fix-caps
    src-qual dev-stage ,
  fix-caps
    src-qual tissue-type ,
  fix-caps
    src-qual lab-host ,
  fix-caps
    src-qual cell-type ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type any ,
            field-from
              legal-qual standard-name ,
            field-to
              legal-qual note } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text append-semi } ,
    also-change-mrna FALSE } ,
  fix-format
    collection-date NULL ,
  aecr {
    action
      edit {
        edit {
          find-txt "segment-" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual segment } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "segment_" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual segment } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "segment:" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual segment } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "segment" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual segment } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "strain-" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "strain_" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "strain:" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "strain" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "strains" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " strain" ,
          location end ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "strains" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "clone-" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual clone } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "clone_" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual clone } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "clone:" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual clone } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "clone" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual clone } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "clone" ,
          location end ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual clone } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "isolate-" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "isolate_" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "isolate:" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "isolate" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "isolated" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "isolate" ,
          location end ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "isolated" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location nucleomorph } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "Organelle: nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "Organelle: nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location macronuclear } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "Organelle: macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "Organelle: macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  fix-spell NULL ,
  fix-format
    lat-lon NULL ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual all-quals } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct TRUE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        value "tandem" ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-type } ,
        string-constraint {
          match-text "microsatellite" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        string-constraint {
          match-text "tandem" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        value "tandem" ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-type } ,
        string-constraint {
          match-text "minisatellite" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        string-constraint {
          match-text "tandem" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        value "tandem" ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-type } ,
        string-constraint {
          match-text "satellite" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        string-constraint {
          match-text "tandem" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-name } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-name } ,
        string-constraint {
          match-text "SSR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-name } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-name } ,
        string-constraint {
          match-text "microsatellite" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Viruses" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual germline } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Craniata" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual metagenomic } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type n5UTR ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type n5UTR ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "5'UTR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "5'UTR" ,
              synonyms {
                "5' UTR" ,
                "UTR" ,
                "5`UTR" ,
                "5` UTR" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type n3UTR ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type n3UTR ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "3' UTR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "3' UTR" ,
              synonyms {
                "3'UTR" ,
                "UTR" ,
                "3` UTR" ,
                "3`UTR" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "CBS" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from strain ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "CBS" ,
            repl-txt "CBS:" ,
            location beginning ,
            case-insensitive FALSE } } ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "CBS" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "," ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text ";" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ATCC" ,
              synonyms {
                "DSM" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "CBS" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ATCC" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from strain ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "ATCC" ,
            repl-txt "ATCC:" ,
            location beginning ,
            case-insensitive FALSE } } ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text ";" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "," ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "CBS" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "CBS" ,
              synonyms {
                "DSM" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "DSMZ" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from strain ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "DSMZ" ,
            repl-txt "DSM:" ,
            location beginning ,
            case-insensitive FALSE } } ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSM" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "DSM" ,
              synonyms {
                "DSMZ" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text ";" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "," ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "CBS" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "CBS" ,
              synonyms {
                "ATCC" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSMZ" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "DSMZ" ,
              synonyms {
                "DSM" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "DSM" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from strain ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "DSM" ,
            repl-txt "DSM:" ,
            location beginning ,
            case-insensitive FALSE } } ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSM" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text ";" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "," ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ATCC" ,
              synonyms {
                "CBS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSM" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ATCC" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from cell-line ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "ATCC" ,
            repl-txt "ATCC:" ,
            location beginning ,
            case-insensitive FALSE } } ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text ";" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text "," ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text "DSM" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "DSM" ,
              synonyms {
                "CBS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text "ATCC" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ATCC" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from tissue-type ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "ATCC" ,
            repl-txt "ATCC:" ,
            location beginning ,
            case-insensitive FALSE } } ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text ";" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "," ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "DSM" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "DSM" ,
              synonyms {
                "CBS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "ATCC" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC:" ,
          repl-txt "ATCC " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC:" ,
          repl-txt "ATCC " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual cell-line } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC:" ,
          repl-txt "ATCC " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual tissue-type } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "CBS:" ,
          repl-txt "CBS " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DSMZ:" ,
          repl-txt "DSMZ " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DSM:" ,
          repl-txt "DSM " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC" ,
          repl-txt "ATCC " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC " ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC" ,
          repl-txt "ATCC " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual cell-line } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text "ATCC " ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC" ,
          repl-txt "ATCC " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual tissue-type } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "ATCC " ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "CBS" ,
          repl-txt "CBS " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "CBS " ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "CBS" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DSMZ" ,
          repl-txt "DSMZ " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSMZ " ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSMZ" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DSM" ,
          repl-txt "DSM " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSM " ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSM" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "DSMZ" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  fix-format
    primers NULL ,
  fix-usa-and-states NULL ,
  remove-lineage-notes NULL ,
  aecr {
    action
      convert {
        fields
          source-qual {
            field-from clone ,
            field-to isolate } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual clone ,
        constraint {
          match-text "DGGE" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      convert {
        fields
          source-qual {
            field-from clone ,
            field-to isolate } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual clone ,
        constraint {
          match-text "TGGE" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel_band_" ,
          repl-txt "GGE gel band " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel_band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGEgelband" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGEband" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "gel" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE-band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "gel" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE-gel band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel_" ,
          repl-txt "GGE gel band " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "band" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "band" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_band_" ,
          repl-txt "GGE gel band " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "gel" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "gel" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "dgge gel band" ,
          repl-txt "DGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "DGGE gel band" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "tgge gel band" ,
          repl-txt "TGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "TGGE gel band" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DGGE band" ,
          repl-txt "DGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "TGGE band" ,
          repl-txt "TGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DGGE" ,
          repl-txt "DGGE gel band" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "gel" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "gel" ,
              synonyms {
                "band" ,
                "gel band" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "TGGE" ,
          repl-txt "TGGE gel band" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolate ,
        constraint {
          match-text "gel band" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "gel band" ,
              synonyms {
                "gel" ,
                "band" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE gel band" ,
          repl-txt "GGE gel band " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  fix-caps
    mouse-strain NULL ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp" ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp" ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp." ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp " ,
          repl-txt " sp. " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp" ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual nat-host } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "seqeunce" ,
          repl-txt "sequence" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "seqeunce" ,
          repl-txt "sequence" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type mRNA ,
            field
              legal-qual product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "seqeunce" ,
          repl-txt "sequence" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type otherRNA ,
            field
              legal-qual product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "seqeunce" ,
          repl-txt "sequence" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type otherRNA ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "seqeunce" ,
          repl-txt "sequence" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "seqeunce" ,
          repl-txt "sequence" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type rRNA ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Intergenic spacer" ,
          repl-txt "intergenic spacer" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "intergenic spacer" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "intergeneric" ,
          repl-txt "intergenic" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " gene" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot gene-locus } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "recombination" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "recombination" ,
              synonyms {
                "recombinatin" ,
                "recombinaton" ,
                "recombonation" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "triple" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "triple" ,
              synonyms {
                "block" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " gene, partial cds" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot gene-locus } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "recombination" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "recombination" ,
              synonyms {
                "recombinatin" ,
                "recombinaton" ,
                "recombonation" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "triple" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "triple" ,
              synonyms {
                "block" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt ", partial CDS" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "; partial CDS" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "partial CDS" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "gene, partial CDS" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "recombination" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "recombination" ,
              synonyms {
                "recombinatin" ,
                "recombinaton" ,
                "recombonation" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "activating" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "triple" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "gene partial CDS" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "recombination" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "recombination" ,
              synonyms {
                "recombinatin" ,
                "recombinaton" ,
                "recombonation" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "activating" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "triple" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "gene, partial protein" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "recombination" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "recombination" ,
              synonyms {
                "recombinatin" ,
                "recombinaton" ,
                "recombonation" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "activating" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "triple" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "gene partial protein" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "recombination" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "recombination" ,
              synonyms {
                "recombinatin" ,
                "recombinaton" ,
                "recombonation" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "activating" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "triple" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt ", partial protein" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "; partial protein" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " partial protein" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt ", partial" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "; partial" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " partial" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "oxydase" ,
          repl-txt "oxidase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "oxydase" ,
          repl-txt "oxidase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot gene-locus } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "oxiydase" ,
          repl-txt "oxidase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "oxiydase" ,
          repl-txt "oxidase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot gene-locus } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "oxigenase" ,
          repl-txt "oxygenase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochorme" ,
          repl-txt "cytochrome" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytocrorme" ,
          repl-txt "cytochrome" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "citochrome" ,
          repl-txt "cytochrome" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochome" ,
          repl-txt "cytochrome" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "citocromo" ,
          repl-txt "cytochrome" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrom " ,
          repl-txt "cytochrome " ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "polymeerase" ,
          repl-txt "polymerase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "subunite " ,
          repl-txt "subunit " ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ribossomal" ,
          repl-txt "ribosomal" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ribosmal" ,
          repl-txt "ribosomal" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "robosmal" ,
          repl-txt "ribosomal" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  fix-format
    protein-name NULL ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome b" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome b gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "region" ,
                "cytb" ,
                "cyt b" ,
                "partial sequence" ,
                "complete sequence" ,
                "(cytb)" ,
                "(cyt b)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "cytb" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "cytochrome b (cytb)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome b (cytb)" ,
              synonyms {
                "cytochrome b (cytb) gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome b" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome b" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome b gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "region" ,
                "cytb" ,
                "cyt b" ,
                "partial sequence" ,
                "complete sequence" ,
                "(cytb)" ,
                "(cyt b)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome b gene" ,
              synonyms {
                "cytochrome b (cytb) gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "cytb" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome b" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytb" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "(cytb)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-description ,
        constraint {
          match-text "cytochrome b" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome b" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytb" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "(cytb)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field cds-comment ,
        constraint {
          match-text "cytochrome b" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "maturase K" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "maturase K gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "region" ,
                "sequence" ,
                "matK" ,
                "mat k" ,
                "partial sequence" ,
                "complete sequence" ,
                "(matK)" ,
                "(mat K)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "maturase K" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "maturase" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "matK" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrome oxidase c subunit 1" ,
          repl-txt "cytochrome c oxidase subunit 1" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrome oxidase c subunit I" ,
          repl-txt "cytochrome c oxidase subunit I" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrome c oxidae" ,
          repl-txt "cytochrome c oxidase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrome oxidae" ,
          repl-txt "cytochrome oxidase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrom c oxidase subunit 1" ,
          repl-txt "cytochrome c oxidase subunit 1" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrom oxidase subunit 1" ,
          repl-txt "cytochrome oxidase subunit 1" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-description ,
        constraint {
          match-text "cytochrome oxidase I" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field cds-comment ,
        constraint {
          match-text "cytochrome oxidase I" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-description ,
        constraint {
          match-text "cytochrome oxidase I" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-comment ,
        constraint {
          match-text "cytochrome oxidase I" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome c oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "Cox1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome c oxidase" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome c oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "cytochrome oxidase C subunit I" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome oxidase C subunit I" ,
              synonyms {
                "cytochrome C oxidase subunit I" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome oxidase c" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome oxidase c" ,
              synonyms {
                "cytochrome c oxidase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "translation elongation factor 1-alpha" ,
        existing-text replace-old } ,
    also-change-mrna TRUE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "Translation elongation factor 1-alpha" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Translation elongation factor 1-alpha" ,
              synonyms {
                "Translation elongation factor 1-alpha partial sequence" ,
                "Translation elongation factor 1-alpha partial protein" ,
                "Translation elongation factor 1-alpha partial" ,
                "Translation elongation factor 1-alpha, partial sequence" ,
                "Translation elongation factor 1-alpha, partial protein" ,
                "Translation elongation factor 1-alpha, partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      swap {
        fields
          cds-gene-prot {
            field-from prot-name ,
            field-to gene-locus } } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cox1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cox1" ,
              synonyms {
                "coxI" ,
                "CO1" ,
                "COI" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "cytochrome oxidase subunit I" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome oxidase subunit I" ,
              synonyms {
                "cytochrome c oxidase subunit I" ,
                "cytochrome c oxidase subunit one" ,
                "cytochrome oxidase subunit one" ,
                "cytochrome c oxidase subunit I" ,
                "cytochrome oxidase subunit I" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      swap {
        fields
          cds-gene-prot {
            field-from prot-name ,
            field-to cds-comment } } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field cds-comment ,
        constraint {
          match-text "cytochrome oxidase subunit I" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome oxidase subunit I" ,
              synonyms {
                "cytochrome c oxidase subunit I" ,
                "cytochrome c oxidase subunit one" ,
                "cytochrome oxidase subunit one" ,
                "cytochrome c oxidase subunit I" ,
                "cytochrome oxidase subunit I" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Cytochrome Oxidase unit " ,
          repl-txt "cytochrome oxidase subunit " ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "subunit" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Cytochrome c Oxidase unit " ,
          repl-txt "cytochrome c oxidase subunit " ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "subunit" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit I" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit I gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome c oxidase subunit I gene" ,
              synonyms {
                "cytochrome c oxidase I" ,
                "cytochrome c oxidase I gene" ,
                "cytochrome c subunit I" ,
                "cytochrome c oxidase subunit I gene protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "I" ,
              synonyms {
                "one" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit II" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit II gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome c oxidase subunit II gene" ,
              synonyms {
                "cytochrome c oxidase II gene" ,
                "cytochrome c oxidase II" ,
                "cytochrome c subunit II" ,
                "cytochrome c oxidase subunit II protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "II" ,
              synonyms {
                "two" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit I" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit I gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome oxidase subunit I gene" ,
              synonyms {
                "cytochrome oxidase I gene" ,
                "cytochrome oxidase I" ,
                "cytochrome subunit I" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "I" ,
              synonyms {
                "one" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word " I" ,
              synonyms {
                " i" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit II" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit II gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome oxidase subunit II gene" ,
              synonyms {
                "cytochrome oxidase II gene" ,
                "cytochrome oxidase II" ,
                "cytochrome subunit II" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "II" ,
              synonyms {
                "two" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "II" ,
              synonyms {
                "ii" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit III" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit III gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome oxidase subunit III gene" ,
              synonyms {
                "cytochrome oxidase III gene" ,
                "cytochrome oxidase III" ,
                "cytochrome subunit III" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "III" ,
              synonyms {
                "three" ,
                "iii" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit 1 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome c oxidase subunit 1 gene" ,
              synonyms {
                "cytochrome c oxidase 1 gene" ,
                "cytochrome c oxidase 1" ,
                "cytochrome c subunit 1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "one" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit 1 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome oxidase subunit 1 gene" ,
              synonyms {
                "cytochrome oxidase 1" ,
                "cytochrome oxidase 1 gene" ,
                "cytochrome subunit 1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "one" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "COI" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "cytochrome oxidase subunit 1 (COI)" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome oxidase subunit 1 (COI)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "cytochrome oxidase subunit 1 (COI)" ,
              synonyms {
                "cytochrome oxidase subunit 1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "cytochrome oxidase subunit 1 (COI)" ,
          repl-txt "cytochrome oxidase subunit 1" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "COI" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "cytochrome oxidase subunit I (COI)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome oxidase subunit I (COI)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome oxidase subunit I (COI)" ,
              synonyms {
                "cytochrome oxidase subunit I" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "COI" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "cytochrome oxidase I (COI)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome oxidase I (COI)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome oxidase I (COI)" ,
              synonyms {
                "cytochrome oxidase subunit I (COI)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome oxidase subunit I" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COI" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome oxidase I (COI)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "cytochrome oxidase I (COI)" ,
              synonyms {
                "cytochrome oxidase subunit I (COI)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome oxidase subunit I" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COI" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome oxidase I (COI)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "cytochrome oxidase subunit III" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "COIII" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "cytochrome oxidase subunit III (COIII) gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "cytochrome oxidase subunit III (COIII) gene" ,
              synonyms {
                "cytochrome oxidase subunit 3 (COIII) gene" ,
                "cytochrome oxidase subunit 3 (COIII)" ,
                "cytochrome oxidase subunit III (COIII)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "COI" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "mt DNA COI" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "mt DNA COI" ,
              synonyms {
                "mtCOI" ,
                "mt COI" ,
                "mitochondrial COI" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit 2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit 2 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "sequence" ,
                "region" ,
                "partial sequence" ,
                "complete sequence" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome c oxidase subunit 2 gene" ,
              synonyms {
                "cytochrome c oxidase 2 gene" ,
                "cytochrome c oxidase 2" ,
                "cytochrome c subunit 2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "2" ,
              synonyms {
                "two" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit 2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit 2 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "sequence" ,
                "region" ,
                "partial sequence" ,
                "complete sequence" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome oxidase subunit 2 gene" ,
              synonyms {
                "cytochrome oxidase 2 gene" ,
                "cytochrome oxidase 2" ,
                "cytochrome subunit 2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "2" ,
              synonyms {
                "two" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit 3" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit 3 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "sequence" ,
                "region" ,
                "partial sequence" ,
                "complete sequence" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "cytochrome oxidase subunit 3 gene" ,
              synonyms {
                "cytochrome oxidase 3 gene" ,
                "cytochrome oxidase 3" ,
                "cytochrome subunit 3" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "3" ,
              synonyms {
                "three" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase subunit" ,
              synonyms {
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "ribulose-1,5-bisphosphate carboxylase/oxygenase large
 subunit gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "complete sequence" ,
                "region" ,
                "complete" ,
                "partial" ,
                "sequence" ,
                "rbcL" ,
                "partial sequence" ,
                "protein" ,
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "large subunit gene" ,
              synonyms {
                "lsu" ,
                "large" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "ribulose-1,5-bisphosphate carboxylase/oxygenase gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "complete sequence" ,
                "region" ,
                "complete" ,
                "partial" ,
                "sequence" ,
                "rbcL" ,
                "partial sequence" ,
                "protein" ,
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribulose-1,5-bisphosphate carboxylase/oxygenase gene" ,
              synonyms {
                "ribulose-1,5-bisphosphate carboxylase/oxygenase" ,
                "ribulose 1,5-bisphosphate carboxylase oxygenase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "rbcl gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "rbcl gene" ,
              synonyms {
                "rbcl" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "protein" ,
                "partial sequence" ,
                "partial protein" ,
                "partial gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "ribulose-1,5-bisphosphate carboxylase/oxygenase gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "complete sequence" ,
                "region" ,
                "complete" ,
                "partial" ,
                "sequence" ,
                "rbcS" ,
                "partial sequence" ,
                "protein" ,
                "subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribulose-1,5-bisphosphate carboxylase/oxygenase gene" ,
              synonyms {
                "ribulose-1,5-bisphosphate carboxylase/oxygenase" ,
                "ribulose 1,5-bisphosphate carboxylase oxygenase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "rbcs gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "rbcs gene" ,
              synonyms {
                "rbcs" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "protein" ,
                "partial gene" ,
                "partial sequence" ,
                "partial protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "ribulose-1,5-bisphosphate carboxylase/oxygenase small
 subunit gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "region" ,
                "sequence" ,
                "rbcS" ,
                "complete sequence" ,
                "protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "MHC class I antigen" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "MHC CLASS I ANTIGEN gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot mrna-product ,
        value "MHC class I antigen" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "MHC CLASS I ANTIGEN gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "MHC class II antigen" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "MHC CLASS II ANTIGEN gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot mrna-product ,
        value "MHC class II antigen" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "MHC CLASS II ANTIGEN gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "ND1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "NADH dehydrogenase subunit 1 gene (ND1)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial sequence" ,
                "complete sequence" ,
                "mitochondrial sequence" ,
                "mtDNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 1" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "NADH dehydrogenase subunit 1 (ND1)" ,
          repl-txt "NADH dehydrogenase subunit 1" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "ND1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 1 (ND1)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "NADH dehydrogenase subunit 1 (ND1)" ,
              synonyms {
                "NADH dehydrogenase subunit 1 (ND1) gene" ,
                "NADH dehydrogenase subunit 1 (ND1) sequence" ,
                "NADH dehydrogenase subunit 1 (ND1) partial sequence" ,
                "NADH dehydrogenase subunit 1 (ND1) partial protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "ND2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "NADH dehydrogenase subunit 2 gene (ND2)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial sequence" ,
                "complete sequence" ,
                "mitochondrial sequence" ,
                "mtDNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 2" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "NADH dehydrogenase subunit 2 (ND2)" ,
          repl-txt "NADH dehydrogenase subunit 2" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "ND2" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "ND3" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "NADH dehydrogenase subunit 3 gene (ND3)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial sequence" ,
                "complete sequence" ,
                "mitochondrial sequence" ,
                "mtDNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 3" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "NADH dehydrogenase subunit 3 (ND3)" ,
          repl-txt "NADH dehydrogenase subunit 3" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "ND3" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "ND4" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "NADH dehydrogenase subunit 4 gene (ND4)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial sequence" ,
                "complete sequence" ,
                "mitochondrial sequence" ,
                "mtDNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 4" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "NADH dehydrogenase subunit 4 (ND4)" ,
          repl-txt "NADH dehydrogenase subunit 4" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "ND4" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "ND5" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "NADH dehydrogenase subunit 5 gene (ND5)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial sequence" ,
                "complete sequence" ,
                "mitochondrial sequence" ,
                "mtDNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 5" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "NADH dehydrogenase subunit 5 (ND5)" ,
          repl-txt "NADH dehydrogenase subunit 5" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "ND5" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot gene-locus ,
        value "ND6" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "NADH dehydrogenase subunit 6 gene (ND6)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial sequence" ,
                "complete sequence" ,
                "mitochondrial sequence" ,
                "mtDNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 6" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "NADH dehydrogenase subunit 6 (ND6)" ,
          repl-txt "ND6" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot gene-locus } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "NADH dehydrogenase subunit 6 (ND6)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "NADH dehydrogenase subunit 6 (ND6)" ,
          repl-txt "NADH dehydrogenase subunit 6" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "ND6" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna TRUE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 1 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 1 gene" ,
            synonyms {
              "NADH dehydrogenase 1 gene" ,
              "NADH dehydrogenase 1" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "1" ,
            synonyms {
              "one" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 2 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 2 gene" ,
            synonyms {
              "NADH dehydrogenase 2 gene" ,
              "NADH dehydrogenase 2" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "2" ,
            synonyms {
              "two" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 3" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 3 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 3 gene" ,
            synonyms {
              "NADH dehydrogenase 3 gene" ,
              "NADH dehydrogenase 3" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "3" ,
            synonyms {
              "three" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 4" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 4 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 4 gene" ,
            synonyms {
              "NADH dehydrogenase 4 gene" ,
              "NADH dehydrogenase 4" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "4" ,
            synonyms {
              "four" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 5" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 5 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 5 gene" ,
            synonyms {
              "NADH dehydrogenase 5 gene" ,
              "NADH dehydrogenase 5" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "5" ,
            synonyms {
              "five" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 6" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 6 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 6 gene" ,
            synonyms {
              "NADH dehydrogenase 6 gene" ,
              "NADH dehydrogenase 6" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "6" ,
            synonyms {
              "six" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "alpha-actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "alpha Actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot mrna-product ,
        value "actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot mrna-product ,
        value "alpha-actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "alpha Actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "hypothetical protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Hypothetical protein gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "Hypothetical protein gene" ,
            synonyms {
              "Hypothetical" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "flagellin A" ,
        existing-text replace-old } ,
    also-change-mrna TRUE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "Flagellin A" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      convert {
        fields
          cds-gene-prot {
            field-from prot-name ,
            field-to prot-name } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization tolower ,
        existing-text replace-old } ,
    also-change-mrna TRUE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "Inclusion body protein" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "Inclusion body protein" ,
              synonyms {
                "Reverse Transcriptase" ,
                "Glucose-6-phosphate dehydrogenase" ,
                "Phosphoribosylaminoimidazole carboxylase" ,
                "Transkelotase" ,
                "Envelope glycoprotein precursor" ,
                "Fusion protein" ,
                "Core protein" ,
                "large Surface protein" ,
                "Rhodopsin" ,
                "Brain Derived Neurotrophic Factor" ,
                "Oocyte maturation factor" ,
                "Phosducin" ,
                "Prolactin receptor" ,
                "Spike protein" ,
                "Histone protein" ,
                "Nucleocapsid protein" ,
                "Adenylate Kinase" ,
                "Alcohol dehydrogenase" ,
                "Glucosephosphate isomerase" ,
                "Malate Dehydrogenase" ,
                "Hemagglutinin" ,
                "Large protein" ,
                "Matrix protein" ,
                "Phosphoprotein" ,
                "Nucleolin" ,
                "Cell Division Cycle 42" ,
                "Heat Shock Protein 90" ,
                "Growth Hormone" ,
                "Elongation Factor 1 alpha" ,
                "Attachment protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Histone H3" ,
          repl-txt "histone H3" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna TRUE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "Histone H3" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DNA Gyrase, subunit B" ,
          repl-txt "DNA gyrase subunit B" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna TRUE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "DNA Gyrase, subunit B" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "RNA polymerase, beta subunit" ,
          repl-txt "RNA polymerase beta subunit" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna TRUE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "RNA polymerase, beta subunit" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Recombinase A" ,
          repl-txt "recombinase A" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna TRUE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "Recombinase A" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Putative" ,
          repl-txt "putative" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "putative" ,
        existing-text prefix-space } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text ", putative" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      string {
        match-text "putative" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "putative" ,
            synonyms {
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt ", putative" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "putative" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " putative" ,
          location end ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "putative" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Polymerase" ,
          repl-txt "polymerase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "Polymerase sequence" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Polymerase sequence" ,
              synonyms {
                "Polymerase" ,
                "Polymerase gene" ,
                "Polymerase protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "beta-tubulin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "beta-tubulin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "beta-tubulin" ,
            synonyms {
              "beta tubulin" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot mrna-product ,
        value "beta-tubulin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "beta-tubulin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "beta-tubulin" ,
            synonyms {
              "beta tubulin" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "beta-actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "beta-actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "beta-actin" ,
            synonyms {
              "beta actin" ,
              "beta_actin" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot mrna-product ,
        value "beta-actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "beta-actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "protein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "beta-actin" ,
            synonyms {
              "beta actin" ,
              "beta_actin" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        value "16S-23S ribosomal RNA intergenic spacer" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "16S/23S intergenic spacer" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "16S/23S intergenic spacer" ,
              synonyms {
                "16S-23S intergenic spacer" ,
                "16S/23S RNA intergenic spacer" ,
                "16S-23S RNA intergenic spacer" ,
                "16S/23S rRNA intergenic spacer" ,
                "16S-23S rRNA intergenic spacer" ,
                "16S/23S RRNA IGS" ,
                "16S-23S RRNA IGS" ,
                "16S/23S IGS" ,
                "16S-23S IGS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          equals 1 ,
        strandedness any } ,
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "partial sequence" ,
                "complete sequence" ,
                "complete" ,
                "partial" ,
                "gene" ,
                "sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "r" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word " ribosomal RNA gene" ,
              synonyms {
                "rDNA" ,
                "rRNA" ,
                "RNA" ,
                "RNA gene" ,
                "rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "partial sequence" ,
                "complete sequence" ,
                "complete" ,
                "partial" ,
                "gene" ,
                "sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "r" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word " ribosomal RNA gene" ,
              synonyms {
                "rDNA" ,
                "rRNA" ,
                "RNA" ,
                "RNA gene" ,
                "rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from otherRNA ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type otherRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "partial sequence" ,
                "complete sequence" ,
                "complete" ,
                "partial" ,
                "gene" ,
                "sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "r" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word " ribosomal RNA gene" ,
              synonyms {
                "rDNA" ,
                "rRNA" ,
                "RNA" ,
                "RNA gene" ,
                "rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          equals 1 ,
        strandedness any } ,
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "partial sequence" ,
                "complete sequence" ,
                "complete" ,
                "partial" ,
                "gene" ,
                "sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "r" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word " ribosomal RNA gene" ,
              synonyms {
                "rDNA" ,
                "rRNA" ,
                "RNA" ,
                "RNA gene" ,
                "rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          equals 1 ,
        strandedness any } ,
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "12S" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "12S" ,
              synonyms {
                "5.8S" ,
                "16S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "genomic DNA" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          less-than 3 ,
        length
          less-than 1001 ,
        strandedness any } ,
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "partial sequence" ,
                "complete sequence" ,
                "complete" ,
                "partial" ,
                "gene" ,
                "sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "r" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16" ,
              synonyms {
                "5.8" ,
                "12" ,
                "18" ,
                "23" ,
                "26" ,
                "28" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word " ribosomal RNA gene" ,
              synonyms {
                "rDNA" ,
                "rRNA" ,
                "RNA" ,
                "RNA gene" ,
                "rRNA gene" ,
                "rRNA partial gene" ,
                "rRNA partial sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S ribosomal RNA gene" ,
              synonyms {
                "gene 16S rRNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          less-than 3 ,
        length
          less-than 1001 ,
        strandedness any } ,
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "16S" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "16" ,
              synonyms {
                "5.8" ,
                "12" ,
                "18" ,
                "23" ,
                "26" ,
                "28" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "S RIBOSOMAL RNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "S ribosomal RNA" ,
        match-location ends ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Sr RNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "S ribosomal RNA" ,
        match-location ends ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "S r RNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "S r DNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Sr DNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Large subunit ribosomal RNA" ,
          repl-txt "large subunit ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Small subunit ribosomal RNA" ,
          repl-txt "small subunit ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ribosomal RNA gene" ,
          repl-txt "ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "ribosomal RNA gene" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "ribosomal RNA gene" ,
            synonyms {
              "ribosomal RNA gene sequence" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "large subunit ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "LSU ribosomal RNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "LSU ribosomal RNA" ,
            synonyms {
              "large subunit (LSU) ribosomal RNA" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "rRNA gene" ,
          repl-txt "ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "-rRNA" ,
          repl-txt " ribosomal RNA" ,
          location end ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "s-rRNA" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "l-rRNA" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " S RIBOSOMAL RNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Subunit Ribosomal RNA" ,
          repl-txt "subunit ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "subunit ribosomal RNA" ,
        match-location ends ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "RDNA Gene sequence" ,
          repl-txt "ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "small subunit ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "SSU ribosomal RNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "SSU ribosomal RNA" ,
            synonyms {
              "small subunit (SSU) ribosomal RNA" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "S SSU ribosomal RNA" ,
          repl-txt "S small subunit ribosomal RNA" ,
          location end ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "SSU" ,
          repl-txt "small subunit ribosomal RNA" ,
          location end ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "SSU" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "LSU" ,
          repl-txt "large subunit ribosomal RNA" ,
          location end ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "LSU" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "S LSU ribosomal RNA" ,
          repl-txt "S large subunit ribosomal RNA" ,
          location end ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "5.8S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "5.8S ribosomal RNA gene" ,
              synonyms {
                "5.8SrDNA" ,
                "5.8SrRNA" ,
                "5.8SrDNA gene" ,
                "5.8SrRNA gene" ,
                "5.8SrDNA gene sequence" ,
                "5.8SrRNA gene sequence" ,
                "5.8SrDNA gene sequence region" ,
                "5.8SrRNA gene sequence region" ,
                "5.8S rDNA gene" ,
                "5.8S rRNA gene" ,
                "5.8S gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "5.8S ribosomal RNA gene" ,
              synonyms {
                "gene 5.8S rRNA" ,
                "gene 5.8S ribosomal RNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "12S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "12S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "12S ribosomal RNA gene" ,
              synonyms {
                "12SrDNA" ,
                "12SrRNA" ,
                "12SrDNA gene" ,
                "12SrRNA gene" ,
                "12SrDNA gene sequence" ,
                "12SrRNA gene sequence" ,
                "12SrDNA gene sequence region" ,
                "12SrRNA gene sequence region" ,
                "12S rDNA gene" ,
                "12S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "12S ribosomal RNA gene" ,
              synonyms {
                "gene 12S rRNA" ,
                "gene 12S ribosomal RNA" ,
                "12S gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "16S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S ribosomal RNA gene" ,
              synonyms {
                "16SrDNA" ,
                "16SrRNA" ,
                "16SrDNA gene" ,
                "16SrRNA gene" ,
                "16SrDNA gene sequence" ,
                "16SrRNA gene sequence" ,
                "16SrDNA gene sequence region" ,
                "16SrRNA gene sequence region" ,
                "16S rDNA gene" ,
                "16S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S ribosomal RNA gene" ,
              synonyms {
                "gene 16S rRNA" ,
                "gene 16S ribosomal RNA" ,
                "16S gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "18S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "18S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "18S ribosomal RNA gene" ,
              synonyms {
                "18SrDNA" ,
                "18SrRNA" ,
                "18SrDNA gene" ,
                "18SrRNA gene" ,
                "18SrDNA gene sequence" ,
                "18SrRNA gene sequence" ,
                "18SrDNA gene sequence region" ,
                "18SrRNA gene sequence region" ,
                "18S rDNA gene" ,
                "18S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "18S ribosomal RNA gene" ,
              synonyms {
                "gene 18S rRNA" ,
                "gene 18S ribosomal RNA" ,
                "18S gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "23S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "23S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "23S ribosomal RNA gene" ,
              synonyms {
                "23SrDNA" ,
                "23SrRNA" ,
                "23SrDNA gene" ,
                "23SrRNA gene" ,
                "23SrDNA gene sequence" ,
                "23SrRNA gene sequence" ,
                "23SrDNA gene sequence region" ,
                "23SrRNA gene sequence region" ,
                "23S rDNA gene" ,
                "23S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "23S ribosomal RNA gene" ,
              synonyms {
                "gene 23S rRNA" ,
                "gene 23S ribosomal RNA" ,
                "23S gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "26S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "26S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "26S ribosomal RNA gene" ,
              synonyms {
                "26SrDNA" ,
                "26SrRNA" ,
                "26SrDNA gene" ,
                "26SrRNA gene" ,
                "26SrDNA gene sequence" ,
                "26SrRNA gene sequence" ,
                "26SrDNA gene sequence region" ,
                "26SrRNA gene sequence region" ,
                "26S rDNA gene" ,
                "26S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "26S ribosomal RNA gene" ,
              synonyms {
                "gene 26S rRNA" ,
                "gene 26S ribosomal RNA" ,
                "26S gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "28S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "28S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "28S ribosomal RNA gene" ,
              synonyms {
                "28SrDNA" ,
                "28SrRNA" ,
                "28SrDNA gene" ,
                "28SrRNA gene" ,
                "28SrDNA gene sequence" ,
                "28SrRNA gene sequence" ,
                "28SrDNA gene sequence region" ,
                "28SrRNA gene sequence region" ,
                "28S rDNA gene" ,
                "28S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "28S ribosomal RNA gene" ,
              synonyms {
                "gene 28S rRNA" ,
                "gene 28S ribosomal RNA" ,
                "28S gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "18S small subunit ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "18S SSU ribosomal RNA" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "18S SSU ribosomal RNA" ,
            synonyms {
              "18S small subunit SSU ribosomal RNA" ,
              "18S small subunit (SSU) ribosomal RNA" ,
              "small subunit (SSU) 18S ribosomal RNA" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "28S large subunit ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "28S LSU ribosomal RNA" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "28S LSU ribosomal RNA" ,
            synonyms {
              "28S large subunit LSU ribosomal RNA" ,
              "28S large subunit (LSU) ribosomal RNA" ,
              "large subunit (LSU) 28S ribosomal RNA" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "spaser" ,
          repl-txt "spacer" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              any NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "intrenal" ,
          repl-txt "internal" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              any NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "trascribed" ,
          repl-txt "transcribed" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              any NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "spaser" ,
          repl-txt "spacer" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              any NULL ,
            field comment } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "intrenal" ,
          repl-txt "internal" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              any NULL ,
            field comment } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "trascribed" ,
          repl-txt "transcribed" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              any NULL ,
            field comment } } ,
    also-change-mrna FALSE } ,
  convert-feature {
    type-from rRNA ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      string {
        match-text "internal transcribed" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      string {
        match-text "ribosomal RNA" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      string {
        match-text "contains" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      parse {
        portion {
          include-left FALSE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          rna-field {
            type
              rRNA NULL ,
            field-from comment ,
            field-to product } ,
        remove-from-parsed TRUE ,
        remove-left FALSE ,
        remove-right FALSE ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field comment } ,
        string-constraint {
          match-text "16S ribosomal RNA" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      convert {
        fields
          rna-field {
            type
              miscRNA NULL ,
            field-from product ,
            field-to comment } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "internal transcribed" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      string {
        match-text "ribosomal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      string {
        match-text "contains" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      convert {
        fields
          rna-field {
            type
              miscRNA NULL ,
            field-from product ,
            field-to comment } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "18S ribosomal RNA gene, partial sequence; internal
 transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed
 spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to misc-RNA ,
    leave-original FALSE ,
    src-feat-constraint {
      string {
        match-text "18S ribosomal RNA gene, partial sequence; internal
 transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed
 spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature any ,
        num-features
          equals 1 ,
        strandedness any } } } ,
  aecr {
    action
      remove {
        field
          cds-gene-prot gene-locus } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field gene-locus ,
        constraint {
          match-text "genomic DNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } ,
        string-constraint {
          match-text "18S ribosomal RNA gene, partial sequence; internal
 transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed
 spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "18S ribosomal RNA gene, partial sequence; internal
 transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed
 spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence" ,
          repl-txt "contains 18S ribosomal RNA, internal transcribed spacer 1,
 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type otherRNA ,
            field-from
              legal-qual note ,
            field-to
              legal-qual product } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "internal transcribed spacer 1, ITS1 sequence" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "internal transcribed spacer 1, ITS1 sequence" ,
            synonyms {
              "internal transcribed spacer 1, ITS1" ,
              "internal transcribed spacer 1" ,
              "internal transcribed spacer 1, ITS" ,
              "internal transcribed spacer 1, ITS1 sequence" ,
              "internal transcribed spacer 1, ITS1 region" ,
              "ITS1" ,
              "internal transcribed spacer 1, sequence" ,
              "internal transcribed spacer 1, region" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type otherRNA ,
            field-from
              legal-qual note ,
            field-to
              legal-qual product } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "internal transcribed spacer 2, ITS2 sequence" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "internal transcribed spacer 2, ITS2 sequence" ,
            synonyms {
              "internal transcribed spacer 2, ITS2" ,
              "internal transcribed spacer 2" ,
              "internal transcribed spacer 2, ITS" ,
              "internal transcribed spacer 2, ITS2 sequence" ,
              "internal transcribed spacer 2, ITS2 region" ,
              "ITS2" ,
              "internal transcribed spacer 2, sequence" ,
              "internal transcribed spacer 2, region" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  convert-feature {
    type-from rRNA ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ITS1" ,
              synonyms {
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" ,
                "RNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Internal transcribed spacer 1, ITS1 sequence" ,
              synonyms {
                "ITS1" ,
                "ITS2" ,
                "internal transcribed spacer 1" ,
                "internal transcribed spacer 2" ,
                "internal transcribed spacer 1 (ITS)" ,
                "internal transcribed spacer 2 (ITS)" ,
                "internal transcribed spacer 1 (ITS1)" ,
                "internal transcribed spacer 2 (ITS2)" ,
                "internal transcribed spacer 1, (ITS1)" ,
                "internal transcribed spacer 2, (ITS2)" ,
                "internal transcribed spacer 1, ITS1" ,
                "internal transcribed spacer 2, ITS2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from rRNA ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "Internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ITS1" ,
              synonyms {
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" ,
                "RNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Internal transcribed spacer 1, ITS1 sequence" ,
              synonyms {
                "ITS1" ,
                "ITS2" ,
                "internal transcribed spacer 1" ,
                "internal transcribed spacer 2" ,
                "internal transcribed spacer 1 (ITS)" ,
                "internal transcribed spacer 2 (ITS)" ,
                "internal transcribed spacer 1 (ITS1)" ,
                "internal transcribed spacer 2 (ITS2)" ,
                "Internal transcribed spacer 1, ITS1" ,
                "Internal transcribed spacer 2, ITS2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from region ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type region ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "Region: Internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ITS1" ,
              synonyms {
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" ,
                "RNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from region ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type region ,
            field
              legal-qual name } ,
        string-constraint {
          match-text "Internal transcribed spacer 1, ITS1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Region" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                " (ITS1)" ,
                " (ITS)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Internal transcribed spacer 1, ITS1" ,
              synonyms {
                "Internal transcribed spacer 1" ,
                "Internal transcribed spacer 2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              synonyms {
                "sequence" ,
                "gene" ,
                "partial" ,
                "complete" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "Region: Internal transcribed spacer 1, ITS1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Region" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Region: Internal transcribed spacer 1, ITS1" ,
              synonyms {
                "Region: Internal transcribed spacer 1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                ", (ITS)" ,
                ", (ITS1)" ,
                " (ITS1)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Region: Internal transcribed spacer 1, ITS1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Region" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Region: Internal transcribed spacer 1, ITS1" ,
              synonyms {
                "Region: Internal transcribed spacer 1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                ", (ITS)" ,
                ", (ITS1)" ,
                " (ITS1)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "internal transcribed spacer" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      string {
        match-text "RNA" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type otherRNA ,
            field-from
              legal-qual product ,
            field-to
              legal-qual note } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "internal transcribed spacer" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      string {
        match-text "RNA" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ITS1" ,
          include-left TRUE ,
          right-marker
            free-text ";" ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          rna-field {
            type
              miscRNA NULL ,
            field-from product ,
            field-to comment } ,
        remove-from-parsed TRUE ,
        remove-left FALSE ,
        remove-right TRUE ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "ITS1; internal transcribed spacer 1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ITS2" ,
          include-left TRUE ,
          right-marker
            free-text ";" ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          rna-field {
            type
              miscRNA NULL ,
            field-from product ,
            field-to comment } ,
        remove-from-parsed TRUE ,
        remove-left FALSE ,
        remove-right TRUE ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "ITS2; internal transcribed spacer 2" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        value "internal transcribed spacer 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal" ,
              synonyms {
                "interal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              synonyms {
                "sequence" ,
                "gene" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                " (ITS)" ,
                " (ITS1)" ,
                ", (ITS1)" ,
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1, ITS1 sequence" ,
              synonyms {
                "internal transcribed spacer-1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        value "internal transcribed spacer 2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 2, ITS2 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word ", ITS2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal" ,
              synonyms {
                "interal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              synonyms {
                "sequence" ,
                "gene" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS2" ,
              synonyms {
                " (ITS)" ,
                " (ITS2)" ,
                ", (ITS2)" ,
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2, ITS2 sequence" ,
              synonyms {
                "internal transcribed spacer-2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule genomic ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna rRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule genomic ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            mol-class dna ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna genomic ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" ,
                "18S" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            mol-class dna ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" ,
                "18S" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            strand unknown ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          dna NULL ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      molinfo {
        field
          strand double ,
        is-not TRUE } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule genomic ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna rRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            mol-class dna ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna genomic ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            strand unknown ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          dna NULL ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      molinfo {
        field
          strand double ,
        is-not TRUE } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule genomic ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna rRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } ,
        string-constraint {
          match-text "contains 18S ribosomal RNA, internal transcribed spacer
 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            mol-class dna ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna genomic ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } ,
        string-constraint {
          match-text "contains 18S ribosomal RNA, internal transcribed spacer
 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            strand unknown ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          dna NULL ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } ,
        string-constraint {
          match-text "contains 18S ribosomal RNA, internal transcribed spacer
 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      molinfo {
        field
          strand double ,
        is-not TRUE } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location extrachrom } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "16S ribosomal RNA" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual all-notes } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "16S ribosomal RNA" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      string {
        match-text "extrachromosomal" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  apply-molinfo-block {
    to-list {
      molecule genomic ,
      mol-class dna } ,
    from-list {
      molecule macro-other } ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "16S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from rRNA ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      string {
        match-text "16S-23S ribosomal RNA intergenic spacer" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      convert {
        fields
          rna-field {
            type
              miscRNA NULL ,
            field-from comment ,
            field-to product } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "16S-23S ribosomal RNA intergenic spacer" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "16S-23S ribosomal RNA intergenic spacer" ,
            synonyms {
              "16S-23S intergenic spacer" ,
              "16S-23S spacer" ,
              "16S-23S rRNA intergenic spacer" ,
              "16S-23S IGS" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      string {
        match-text "may also" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "may also" ,
            synonyms {
              "contains" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        value "16S-23S ribosomal RNA intergenic spacer" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "16S-23S rRNA intergenic spacer" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "16S-23S rRNA intergenic spacer" ,
            synonyms {
              "16S-23S IGS" ,
              "16S-23S intergenic spacer" ,
              "16S-23S spacer" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "recombination activating gene" ,
          repl-txt "recombination activating protein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "recombination-activating gene" ,
          repl-txt "recombination activating protein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "recombination-activating protein" ,
          repl-txt "recombination activating protein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "recombination activating protein, partial gene" ,
          repl-txt "recombination activating protein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "gag" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "GAG gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "pol" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "POL gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "vif" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "VIF gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "vpr" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "VPR gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "tat" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "TAT gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "rev" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "REV gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "vpu" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "VPU gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "env" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "ENV gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "nef" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "NEF gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "gag protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "gag sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gag" ,
              synonyms {
                "Gag protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gag sequence" ,
              synonyms {
                "gag" ,
                "Gag protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "pol protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "pol sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "pol" ,
              synonyms {
                "Pol protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "pol sequence" ,
              synonyms {
                "pol" ,
                "pol protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "vif protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "vif sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "vif" ,
              synonyms {
                "Vif protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "vpr protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "vpr sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "vpr" ,
              synonyms {
                "Vpr protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "vpr sequence" ,
              synonyms {
                "vpr" ,
                "Vpr protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "tat protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "tat sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "tat" ,
              synonyms {
                "Tat protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "tat sequence" ,
              synonyms {
                "tat" ,
                "Tat protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "rev protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "rev sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "rev" ,
              synonyms {
                "Rev protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "rev sequence" ,
              synonyms {
                "rev" ,
                "Rev protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "vpu protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "vpu sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "vpu" ,
              synonyms {
                "Vpu protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "vpu sequence" ,
              synonyms {
                "vpu" ,
                "Vpu protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "envelope glycoprotein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "env sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "env" ,
              synonyms {
                "envelope" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "env sequence" ,
              synonyms {
                "Env protein" ,
                "Env glycoprotein" ,
                "Env" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "nef protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "nef sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "nef sequence" ,
              synonyms {
                "Nef protein" ,
                "nef" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "envelope protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Envelope protein sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Envelope protein sequence" ,
              synonyms {
                "Envelope protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "polyprotein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Polyprotein gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "Polyprotein gene" ,
            synonyms {
              "Polyprotein" ,
              "polyprotein sequence" ,
              "polyprotein cds" ,
              "poliprotein" ,
              "pollyprotein" ,
              "polliprotein" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "glycoprotein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Glycoprotein sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Glycoprotein sequence" ,
              synonyms {
                "Glycoprotein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "nucleoprotein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Nucleoprotein sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Nucleoprotein sequence" ,
              synonyms {
                "Nucleoprotein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "coat protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Coat protein sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Coat protein sequence" ,
              synonyms {
                "Coat protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "capsid protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Capsid protein sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Capsid protein sequence" ,
              synonyms {
                "capside protein" ,
                "capside protein sequence" ,
                "Capsid protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "movement protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "movement protein sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "movement protein sequence" ,
              synonyms {
                "Movement protein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "envelope glycoprotein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Envelope glycoprotein sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "sequence" ,
              synonyms {
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Envelope glycoprotein sequence" ,
              synonyms {
                "Envelope glycoprotein protein" ,
                "Envelope glycoprotein" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "nonstructural protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Nonstructural protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "RNA-dependent RNA polymerase" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "RNA-Dependent RNA polymerase" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type cds ,
            field
              legal-qual codon-start } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual codon-start } ,
        string-constraint {
          match-text "atg" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "intron" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          feature-field {
            type intron ,
            field
              legal-qual number } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "exon" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          feature-field {
            type exon ,
            field
              legal-qual number } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Gallus gallus" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual nat-host ,
        constraint {
          match-text "Gallus domesticus (chicken)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "(chicken)" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Gallus domesticus (chicken)" ,
              synonyms {
                "Gallus gallus domesticus" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location plastid } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location chloroplast } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location chromoplast } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location leucoplast } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location proplastid } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location plastid } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location chloroplast } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location chromoplast } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location leucoplast } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location proplastid } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location mitochondrion } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location mitochondrion } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location extrachrom } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Viruses" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual identified-by ,
        constraint {
          match-text "unknown" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "unknown" ,
              synonyms {
                "N/A" ,
                "none" ,
                "not applicable" ,
                "not aplicable" ,
                "same laboratory" ,
                "laboratory" ,
                "lab" ,
                "our laboratory" ,
                "n.a." ,
                "not available" ,
                "many methods" ,
                "molecular typing method" ,
                "biochemical tests" ,
                "biochemical testing" ,
                "biochemical test" ,
                "bacteria" ,
                "PCR, Sequencing, and Cloning" ,
                "PCR, Sequencing, Cloning" ,
                "molecular methods" ,
                "16S" ,
                "Sanger" ,
                "Sanger sequencing" ,
                "sanger-sequencing" ,
                "sequence" ,
                "sequencing" ,
                "Author" ,
                "authors" ,
                "student" ,
                "students" ,
                "self" ,
                "me" ,
                "myself" ,
                "Rose Rainbolt" ,
                "Carlos Cutrer" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual collected-by ,
        constraint {
          match-text "unknown" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "unknown" ,
              synonyms {
                "N/A" ,
                "none" ,
                "not applicable" ,
                "not aplicable" ,
                "same laboratory" ,
                "laboratory" ,
                "lab" ,
                "our laboratory" ,
                "n.a." ,
                "not available" ,
                "many methods" ,
                "molecular typing method" ,
                "biochemical tests" ,
                "biochemical testing" ,
                "biochemical test" ,
                "bacteria" ,
                "PCR, Sequencing, and Cloning" ,
                "PCR, Sequencing, Cloning" ,
                "molecular methods" ,
                "16S" ,
                "Sanger" ,
                "Sanger sequencing" ,
                "sanger-sequencing" ,
                "sequence" ,
                "sequencing" ,
                "Author" ,
                "authors" ,
                "student" ,
                "students" ,
                "self" ,
                "me" ,
                "myself" ,
                "Rose Rainbolt" ,
                "Carlos Cutrer" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual lat-lon } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "unknown" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "unknown" ,
            synonyms {
              "N/A" ,
              "none" ,
              "not applicable" ,
              "not aplicable" ,
              "n.a." ,
              "not available" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual country } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "unknown" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "unknown" ,
            synonyms {
              "N/A" ,
              "none" ,
              "not applicable" ,
              "not aplicable" ,
              "not available" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt ":" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt ":" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "/" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "/" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt ";" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt ";" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE } ,
  fix-author {
    fix-type move-middle-to-first } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Control region" ,
          repl-txt "control region" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Control region" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type repeat-region ,
            field-from
              legal-qual rpt-family ,
            field-to
              legal-qual satellite } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-family } ,
        string-constraint {
          match-text "microsatellite" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to misc-feature ,
    leave-original FALSE ,
    src-feat-constraint {
      string {
        match-text "D-loop" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          equals 1 ,
        strandedness any } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to d-loop ,
    leave-original FALSE ,
    src-feat-constraint {
      string {
        match-text "D-loop" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature misc-feature ,
        num-features
          equals 1 ,
        strandedness any } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type d-loop ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type d-loop ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "D-loop" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "hemagglutinin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "haemagglutinin" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule cRNA ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Influenza A virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature any ,
        strandedness any } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule cRNA ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Influenza B virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature any ,
        strandedness any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual all-quals } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "PCR" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "PCR" ,
            synonyms {
              "microscope" ,
              "cloning" ,
              "clone" ,
              "sequencing" ,
              "direct sequencing" ,
              "taxonomy" ,
              "sequence" ,
              "PCR cloning" ,
              "sequence similarity" ,
              "blast" ,
              "blastn" ,
              "blastp" ,
              "blastx" ,
              "tblastn" ,
              "tblastx" ,
              "RT-PCR" ,
              "TAIL-PCR" ,
              "TAIL PCR" ,
              "polymerase chain reaction" ,
              "BLAST search" ,
              "PCR amplification and sequencing" ,
              "pGEMT-Easy" ,
              "nested PCR" ,
              "nested polymerase chain reaction" ,
              "RT PCR" ,
              "RTPCR" ,
              "pGEMT Easy" ,
              "pGEMTEasy" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual clone } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual clone ,
        constraint {
          match-text "direct PCR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "direct PCR" ,
              synonyms {
                "Bacterium" ,
                "Virus" ,
                "Clone" ,
                "True" ,
                "partial" ,
                "16S rRNA gene" ,
                "16S sequencing" ,
                "16S rRNA" ,
                "16S" ,
                "fungal" ,
                "fungus" ,
                "rRNA" ,
                "fungi" ,
                "Bacteria" ,
                "prokaryote" ,
                "prokaryotic" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual cell-type } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual cell-type ,
        constraint {
          match-text "direct PCR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "direct PCR" ,
              synonyms {
                "Bacterium" ,
                "Virus" ,
                "Clone" ,
                "True" ,
                "partial" ,
                "16S rRNA gene" ,
                "16S sequencing" ,
                "16S rRNA" ,
                "16S" ,
                "fungal" ,
                "fungus" ,
                "rRNA" ,
                "fungi" ,
                "Bacteria" ,
                "prokaryote" ,
                "prokaryotic" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "pure-cultured strain" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "pure-cultured strain" ,
              synonyms {
                "pure-culture" ,
                "strain" ,
                "Pure" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual culture-collection } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual culture-collection ,
        constraint {
          match-text "pure-cultured strain" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "pure-cultured strain" ,
              synonyms {
                "pure-culture" ,
                "strain" ,
                "Pure" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual type } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual type ,
        constraint {
          match-text "DNA" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "DNA" ,
              synonyms {
                "RNA" ,
                "genomic" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual type } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual type ,
        constraint {
          match-text "Bacteria" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Bacteria" ,
              synonyms {
                "Bacterium" ,
                "Virus" ,
                "Clone" ,
                "True" ,
                "partial" ,
                "16S rRNA gene" ,
                "16S sequencing" ,
                "16S rRNA" ,
                "16S" ,
                "fungal" ,
                "fungus" ,
                "rRNA" ,
                "fungi" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual biotype } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual biotype ,
        constraint {
          match-text "Bacteria" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Bacteria" ,
              synonyms {
                "Bacterium" ,
                "Virus" ,
                "Clone" ,
                "True" ,
                "partial" ,
                "16S rRNA gene" ,
                "16S sequencing" ,
                "16S rRNA" ,
                "16S" ,
                "fungal" ,
                "fungus" ,
                "rRNA" ,
                "fungi" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual isolation-source ,
        value "nasopharyngeal aspirate" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolation-source ,
        constraint {
          match-text "Naso pharyngeal aspirate" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Naso pharyngeal aspirate" ,
              synonyms {
                "Naso-pharyngeal aspirate" ,
                "naso pharyngeal aspirate" ,
                "naso-pharyngeal aspirate" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual isolation-source ,
        value "lung" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "lung tissue" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      source {
        field1
          textqual isolation-source ,
        constraint {
          match-text "lung tissue" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "lung tissue" ,
              synonyms {
                "lung tissues" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual isolation-source ,
        value "blood" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolation-source ,
        constraint {
          match-text "blood sample" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "blood sample" ,
              synonyms {
                "blood samples" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual tissue-type ,
        value "blood" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "blood sample" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "blood sample" ,
              synonyms {
                "blood samples" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  fix-sets
    remove-single-item-set NULL ,
  reorder-structured-comments NULL ,
  propagate-sequence-technology NULL ,
  remove-duplicate-structured-comments NULL ,
  aecr {
    action
      remove {
        field
          struc-comment-field
            named "Coverage" } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "100%" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "100%" ,
            synonyms {
              "partial" ,
              "all" ,
              "-" ,
              "n/a" ,
              "complete" ,
              "complete sequence" ,
              "partial sequence" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      remove {
        field
          struc-comment-field
            named "Coverage" } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "%" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "v.v." ,
          repl-txt "v." ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          struc-comment-field
            named "Assembly Method" } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Assembly" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "v. version" ,
          repl-txt "v." ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          struc-comment-field
            named "Assembly Method" } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Assembly" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "uncultured fungus clone" ,
          repl-txt "uncultured fungus" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "uncultured fungus clone" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "uncultured bacteria clone" ,
          repl-txt "uncultured bacterium" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "uncultured bacteria clone" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "uncultured bacterium clone" ,
          repl-txt "uncultured bacterium" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "uncultured bacterium clone" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "unculture bacterium" ,
          repl-txt "uncultured bacterium" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "unculture bacterium" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "unculture fungus" ,
          repl-txt "uncultured fungus" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "unculture fungus" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "uncultured cyanobacteria" ,
          repl-txt "uncultured cyanobacterium" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "uncultured cyanobacteria" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Measles viruse" ,
          repl-txt "Measles virus" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Measles viruse" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  remove-duplicate-features {
    type any ,
    ignore-partials FALSE ,
    case-sensitive TRUE ,
    remove-proteins TRUE } ,
  edit-location {
    type rRNA ,
    action
      set-both-partial {
        constraint all ,
        extend FALSE } ,
    retranslate-cds FALSE ,
    also-edit-gene FALSE ,
    constraint {
      location {
        strand plus ,
        seq-type nuc ,
        partial5 complete ,
        partial3 complete ,
        location-type any ,
        end5
          dist-from-end 0 ,
        end3
          dist-from-end 0 } ,
      string {
        match-text "16S ribosomal RNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "16S ribosomal RNA" ,
            synonyms {
              "16S small subunit ribosomal RNA" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature rRNA ,
        num-features
          equals 1 ,
        length
          less-than 1201 ,
        strandedness any } } } ,
  edit-location {
    type rRNA ,
    action
      set-both-partial {
        constraint all ,
        extend FALSE } ,
    retranslate-cds FALSE ,
    also-edit-gene FALSE ,
    constraint {
      location {
        strand plus ,
        seq-type nuc ,
        partial5 complete ,
        partial3 complete ,
        location-type any ,
        end5
          dist-from-end 0 ,
        end3
          dist-from-end 0 } ,
      string {
        match-text "18S ribosomal RNA" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "18S ribosomal RNA" ,
            synonyms {
              "23S ribosomal RNA" ,
              "28S ribosomal RNA" ,
              "26S ribosomal RNA" ,
              "18S small subunit ribosomal RNA" ,
              "23S large subunit ribosomal RNA" ,
              "26S large subunit ribosomal RNA" ,
              "28S large subunit ribosomal RNA" ,
              "large subunit ribosomal RNA" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE ,
        is-first-cap FALSE ,
        is-first-each-cap FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature rRNA ,
        num-features
          equals 1 ,
        length
          less-than 1000 ,
        strandedness any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            origin artificial ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "synthetic construct" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule macro-other ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "synthetic construct" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  fix-sets
    fix-pop-to-phy NULL ,
  aecr {
    action
      convert {
        fields
          source-qual {
            field-from isolation-source ,
            field-to isolation-source } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization tolower ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual isolation-source ,
        constraint {
          match-text "gut" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gut" ,
              synonyms {
                "processed salad" ,
                "mushroom" ,
                "throat swab & urine" ,
                "mouth swab" ,
                "induced sputum" ,
                "skin tissue" ,
                "biogas plant" ,
                "bait shop" ,
                "Nasopharyngeal/Throat Swab" ,
                "water sample" ,
                "coastal water" ,
                "Soil samples" ,
                "Oral Swab" ,
                "throat swab" ,
                "Surface Seawater" ,
                "Plant" ,
                "Insect Gut" ,
                "Sea Water" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      convert {
        fields
          source-qual {
            field-from nat-host ,
            field-to nat-host } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization tolower ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual nat-host ,
        constraint {
          match-text "pumpkin" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "pumpkin" ,
              synonyms {
                "grasshopper" ,
                "green pepper" ,
                "barley" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE ,
          is-first-cap FALSE ,
          is-first-each-cap FALSE } ,
        type-constraint any } } } }
