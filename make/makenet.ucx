$!
$!  MAKENET.UCX (OpenVMS VAX, DEC TCP/IP Services for VMS V2.0 )
$!              (formerly  known  as  the VMS/ULTRIX  Connection, UCX) 
$!
$!   Usage: @makenet.ucx
$!
$!   Builds the network interface, Entrez network access, and client TCP
$!   libraries.
$!
$!   Creates the applications:
$!
$!      NetEntCf - A version of the Entrez configuration program, EntrezCf,
$!                  which includes network support
$!      NEntrez  - Network version of Entrez
$!      CEntrez  - Combo version of Entrez which works with CD-ROMs
$!                  and Network services.  This version uses CD-ROM data
$!                  when available, network services otherwise.
$!
$!
$!   Written by:
$!
$!     William A. Gilbert
$!     Univ. of New Hampshire   gilbert@unh.edu
$!
$!   Modified for UCX by:
$!
$!     Jasper Rees
$!     Oxford University        jasper@molbiol.ox.ac.uk
$!
$!--------------------------------------------------------------------------
$ save_verify = f$verify("yes")
$!
$! Definitions
$!
$! Internet applications for Digital TCP/IP Services for OpenVMS (UCX).
$!
$! Compiling With the DEC C Language
$!
$! If you are using the DEC C or C++ compilers and are having difficulty 
$! compiling, either use the VAX C compiler or the DEC C compiler with
$! the /STANDARD=VAXC qualifier.
$!
$! If you are compiling programs using the DEC C compiler, Digital recommends 
$! using the /PREFIX_LIBRARY_ENTRIES=ALL_ENTRIES qualifier. DEC C supplies 
$! this as the default when using the /STANDARD=COMMON or /STANDARD=VAXC 
$! qualifier.
$!
$! Linking Programs Compiled by DEC C.
$!
$! Do not specify the SYS$LIBRARY:UCX$IPC.OLB library or the UCX$IPC_SHR 
$! shareable image. The UCX$IPC library is not used. UCX$IPC_SHR is used by 
$! default.
$!
$! A typical linker options file for a program based
$!   on OSF/Motif Release 1.1.3 might be as follows:
$!
$!   SYS$SHARE:DECW$XLIBSHR/SHARE
$!   SYS$SHARE:DECW$XTSHR/SHARE
$!   SYS$SHARE:DECW$DWTLIBSHR/SHARE
$!   SYS$SHARE:DECW$XMLIBSHR/SHARE
$!   SYS$SHARE:DECW$DXMLIBSHR/SHARE
$!
$!   To link this program with OSF/Motif Release 1.2.2, the linker
$!   options file should be changed to:
$!
$!   SYS$SHARE:DECW$XLIBSHR/SHARE
$!   SYS$SHARE:DECW$XTLIBSHRR5/SHARE
$!   SYS$SHARE:DECW$XMLIBSHR12/SHARE
$!   SYS$SHARE:DECW$MRMLIBSHR12/SHARE
$!   SYS$SHARE:DECW$DXMLIBSHR12/SHARE
$!
$ CC == -
 "cc/nolist/include=([-.include])/STAND=VAXC/PREFIX_LIBRARY_ENTRIES=ALL_ENTRIES"
$ CCFLAGS = "/define=(NETP_INET_UCX)"
$ RIPEMCC == "cc/nolist/include=([-.network.encrypt.ripem.rsaref.source])"
$!
$!--------------------------------------------------------------------------
$! Add Network include files into NCBI include area
$!
$ copy [-.network.entrez.client]*.h  [-.include]     ! Entrez network access
$ copy [-.network.nsclilib]*.h [-.include]           ! Network services 
$ copy [-.network.taxon1.common]*.h [-.include]
$ copy [-.network.taxon1.stdalone]*.h [-.include]
$ copy [-.network.taxon1.client]*.h [-.include]
$ copy [-.cn3d]*.h [-.include]
$ purge [-.include]
$!
$!----------------------------------------------------------------------
$!
$! Make libncbitxc1.olb
$!
$ CC [-.network.taxon1.common]objtax1
$ CC [-.network.taxon1.common]taxutil
$ CC [-.network.taxon1.client]fscproc
$ CC [-.network.taxon1.client]objtaxc0
$ CC [-.network.taxon1.client]tax0
$!
$ librarian/object/create [-.lib]libncbitxc1.olb -
    objtax1.obj, taxutil.obj, fscproc.obj, objtaxc0.obj, tax0.obj
$!
$ delete *.obj;*
$!------------------------------------------------------------------------
$!
$! Make libncbitax1.olb
$!
$ CC [-.network.taxon1.stdalone]objtax1
$ CC [-.network.taxon1.common]taxutil
$ CC [-.network.taxon1.stdalone]fs1proc
$ CC [-.network.taxon1.stdalone]taxctl
$ CC [-.network.taxon1.stdalone]rank
$ CC [-.network.taxon1.stdalone]nmclass
$ CC [-.network.taxon1.stdalone]division
$ CC [-.network.taxon1.stdalone]gc
$ CC [-.network.taxon1.stdalone]taxtree
$ CC [-.network.taxon1.stdalone]taxname
$ CC [-.network.taxon1.stdalone]fsutils
$ CC [-.network.taxon1.stdalone]rex_util
$ CC [-.network.taxon1.stdalone]objtax0
$ CC [-.network.taxon1.stdalone]tax1proc
$!
$ librarian/object/create [-.lib]libncbitax1.olb -
objtax1,taxutil,fs1proc,taxctl,rank,nmclass,division,gc,tree,taxname,fsutils-
,rex_util,objtax0,tax1proc
$!
$ delete *.obj;*
$!--------------------------------------------------------------------------
$!
$! Make Network Interface library, netcli
$!
$!    N.B. Due to some problem between the compiler and the librarian
$!         these object files will not produce a runnable executable
$!         if linked in as a library, hence seperate files should be
$!         used during linking.
$!
$! Don't make library for now, just copy object file to library directory
$!
$ CC/object=[-.lib] 'CCFLAGS' [-.network.nsclilib]ni_msg.c
$ CC/object=[-.lib] 'CCFLAGS' [-.network.nsclilib]ni_lib.c
$ CC/object=[-.lib] [-.network.NSCLILIB]ni_error.c
$ purge [-.lib]
$!--------------------------------------------------------------------------
$!
$! Make RIPEM encryption library, with encryption "ni_encr.c" module
$!
$! Make the encryption stub
$!
$ CC/object=[-.lib] [-.network.NSCLILIB]ni_encrs.c
$!
$!
$!
$! Create dummy encryption library for when encryption source code is not
$! present
$!
$ delete [-.lib]libencrypt.olb;*
$ lib /cre [-.lib]libencrypt
$!
$ filename = f$searh ( "[-.network.encrypt.ripem.rsaref]source.dir" )
$ if filename .eqs. "" then goto noencrypt 
$!
$! Make the encryption interface routine
$!
$ cc/nolist/object=[-.lib]-
     /include=([],[-.include],[-.network.encrypt.ripem.rsaref.source])-
     [-.network.NSCLILIB]ni_encr.c
$!
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]desc.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]digit.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]digitas.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]md2c.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]md5c.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]nn.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]prime.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]r_encode.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]r_enhanc.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]r_keygen.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]r_random.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]r_stdlib.c
$ RIPEMCC [-.network.encrypt.ripem.rsaref.source]rsa.c
$!
$ Librarian/create/object [-.lib]libencrypt.olb  -
      desc.obj,digit.obj,digitas.obj,md2c.obj,md5c.obj,nn.obj,prime.obj,-
      r_encode.obj,r_enhanc.obj,r_keygen.obj,r_random.obj,r_stdlib.obj,rsa.obj
$!
$ delete desc.obj;*,digit.obj;*,digitas.obj;*,md2c.obj;*,md5c.obj;*,-
         nn.obj;*,prime.obj;*,r_encode.obj;*,r_enhanc.obj;*,r_keygen.obj;*,-
         r_random.obj;*,r_stdlib.obj;*,rsa.obj;*
$ purge [-.lib]
$!
$ noencrypt:
$!
$!--------------------------------------------------------------------------
$!
$! Make Network Dispatcher/Entrez access library, netentr
$!
$ CC [-.network.entrez.client]netentr.c
$ CC [-.network.entrez.client]netlib.c
$ CC [-.network.entrez.client]objneten.c
$!
$  Librarian/create/object [-.lib]netentr.olb  netentr.obj,netlib.obj,objneten.obj
$!
$ delete netentr.obj;*,netlib.obj;*,objneten.obj;*
$ purge [-.lib]
$!
$! Make library which depends upon both Vibrant and the network client
$!
$ CC [-.network.vibnet]netcnfg.c
$ CC [-.network.vibnet]trmlst.c
$ CC [-.network.vibnet]docsum.c
$!
$  Librarian/create/Object [-.lib]vibnet.olb  netcnfg.obj,trmlst.obj,docsum.obj
$!
$ delete netcnfg.obj;*,trmlst.obj;*,docsum.obj;*
$ purge [-.lib]
$!
$!=====================  A P P L I C A T I O N S  ==========================
$!
$! Make version of EntrezCf which has network support
$!
$ CCFLAGS = "/define=(NETP_INET_UCX,WIN_MOTIF)"
$ CC 'CCFLAGS' /object=netentcf.obj [-.demo]netentcf.c
$!
$!  Link EntrezCf
$!
$ link netentcf.obj,sys$input/option
[-.lib]libvibrant.olb/library
[-.lib]libncbicdr.olb/library
[-.lib]vibnet.olb/library
[-.lib]netentr.olb/library
[-.lib]ni_lib.obj
[-.lib]ni_msg.obj
[-.lib]ni_error.obj
[-.lib]ni_encrs.obj
[-.lib]libencrypt.olb/library
[-.lib]libncbi.olb/library
sys$share:decw$xlibshr.exe/share
sys$share:decw$xtlibshrr5.exe/shareable
sys$share:decw$xmlibshr12.exe/shareable
sys$share:decw$mrmlibshr12.exe/shareable
sys$share:decw$dxmlibshr12.exe/shareable
$!-------------------------------------------------------------------------
$!
$! To redirect the Motif window output for UCX use:
$!
$!    $ set display/create/node=gilbert.unh.edu/transport=tcpip
$!
$ if .not.save_verify then set noverify
$ exit
